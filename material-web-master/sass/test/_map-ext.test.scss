//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:list';
@use 'sass:map';
@use 'true' as test;
// go/keep-sorted end
// go/keep-sorted start
@use '../map-ext';
// go/keep-sorted end

@include test.describe('map-ext') {
  @include test.describe('pick()') {
    @include test.it('should return map containing items specified in $list') {
      $map: map-ext.pick(
        (
          one: 1,
          two: 2,
          three: 3,
        ),
        (two, three, four)
      );

      @include test.assert-equal(map.get($map, 'one'), null);
      @include test.assert-equal(map.get($map, 'two'), 2);
      @include test.assert-equal(map.get($map, 'three'), 3);
      @include test.assert-equal(map.get($map, 'four'), null);
    }

    @include test.it('should return empty map for `$list`') {
      $map: map-ext.pick(
        (
          one: 1,
          two: 2,
          three: 3,
        ),
        ()
      );

      @include test.assert-equal(list.length(map.keys($map)), 0);
    }
  }

  @include test.describe('duplicate-key()') {
    @include test.it('should copy to new keys') {
      $map: map-ext.duplicate-key(
        (
          one: 1,
          two: 2,
          three: 3,
        ),
        'two',
        'four'
      );

      @include test.assert-equal(map.get($map, 'one'), 1);
      @include test.assert-equal(map.get($map, 'two'), 2);
      @include test.assert-equal(map.get($map, 'three'), 3);
      @include test.assert-equal(map.get($map, 'four'), 2);
      @include test.assert-equal(list.length(map.keys($map)), 4);
    }

    @include test.it('should overwrite existing keys') {
      $map: map-ext.duplicate-key(
        (
          one: 1,
          two: 2,
          three: 3,
        ),
        'two',
        'three'
      );

      @include test.assert-equal(map.get($map, 'one'), 1);
      @include test.assert-equal(map.get($map, 'two'), 2);
      @include test.assert-equal(map.get($map, 'three'), 2);
      @include test.assert-equal(list.length(map.keys($map)), 3);
    }
  }
}
