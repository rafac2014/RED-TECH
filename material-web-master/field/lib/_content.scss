//
// Copyright 2021 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:math';
// go/keep-sorted end
// go/keep-sorted start
@use '../../motion/animation';
// go/keep-sorted end

// Duration of the label animation.
$_label-duration: 150ms;
// Duration of the content's visibility animation.
$_visible-duration: math.round(math.div($_label-duration * 5, 9));
// Short delay when entering (focusing/populating) so that the label may move
// out of the way before the content starts to appear.
$_enter-delay: $_label-duration - $_visible-duration;

@mixin styles() {
  .start,
  .middle,
  .end {
    display: flex;
    align-items: center;
    box-sizing: border-box;
    height: 100%;
    // Relative position for absolutely positioned labels (to avoid interfering
    // with baseline alignment).
    position: relative;
  }

  .start,
  .end {
    justify-content: center;
  }

  .middle {
    // The container of the field aligns sections by "center". Only the middle
    // section opts in to baseline alignment.
    //
    // Labels are absolutely positioned, which leaves only the content as the
    // evaluated baseline for the field.
    //
    // See https://www.w3.org/TR/css-flexbox-1/#baseline-participation
    align-self: baseline;
    flex: 1;
  }

  .content {
    display: flex;
    flex: 1;
    opacity: 0;
    transition: animation.standard(opacity, $_visible-duration);
    // Content elements provided to the field (such as <input>) may use
    // `currentColor` to inherit this property.
    color: var(--_content-color);
  }

  .no-label .content,
  .focused .content,
  .populated .content {
    opacity: 1;
    transition-delay: $_enter-delay;
  }

  .disabled.no-label .content,
  .disabled.focused .content,
  .disabled.populated .content {
    opacity: var(--_disabled-content-opacity);
  }

  :hover .content {
    color: var(--_hover-content-color);
  }

  .focused .content {
    color: var(--_focus-content-color);
  }

  .disabled .content {
    color: var(--_disabled-content-color);
  }

  .error .content {
    color: var(--_error-content-color);
  }

  .error:hover .content {
    color: var(--_error-hover-content-color);
  }

  .error.focused .content {
    color: var(--_error-focus-content-color);
  }
}
